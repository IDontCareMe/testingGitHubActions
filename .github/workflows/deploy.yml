#====================================================================
# First using GitHub Acions for test this service.
# Test tasks is:
# [1] Try to use gitHub Actions.
# [2] Try to Minify js and css files in container before deploy.
# [3] Try more cool stuff =)
#====================================================================

name: testingGitHubActionsDeploy

on:
  push:
    branches: [ "main" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Print js file before
        run: cat js/script.js
      - name: Minify JS & CSS
        #run: echo "Here we will see minifyed fiels =)"
        uses: nizarmah/auto-minify@v2.1
        with:
          #maxdepth: 1
          directory: 'js'
          overwrite: true
      - name: Print js file after
        run: cat js/script.js
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Print success message
        run: echo "building completed  successfully!"          
          
  testing:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Print message
        run: echo "No tests!"
    
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    needs: [testing]
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
      - name: Print success message
        run: echo "Deployment completed  successfully!"
